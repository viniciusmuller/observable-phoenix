version: '3.8'

networks:
  internet: {}
  metrics: {}

volumes:
  prometheus-data: {}
  grafana-data: {}
  tempo-data: {}
  loki-index: {}
  loki-chunks: {}
  postgres-data: {}

services:
  prometheus:
    image: prom/prometheus:v2.37.5
    container_name: prometheus
    restart: unless-stopped
    networks:
      - metrics
      - internet
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command: 
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.external-url=/prometheus/'
      - '--web.route-prefix=/prometheus/'

  grafana:
    restart: unless-stopped
    image: grafana/grafana-oss:8.2.0
    container_name: grafana
    networks:
      - metrics
    volumes:
      - ./grafana:/etc/grafana
      - grafana-data:/var/lib/grafana

  tempo:
    image: grafana/tempo:1.4.1
    container_name: tempo
    restart: unless-stopped
    command: [ "-config.file=/etc/tempo/tempo.yaml" ]
    networks:
      - metrics
    volumes:
      - ./tempo/tempo.yaml:/etc/tempo/tempo.yaml
      - ./tempo/overrides.yaml:/etc/overrides.yaml
      - tempo-data:/tmp/tempo

  loki:
    image: grafana/loki:2.5.0
    container_name: loki
    restart: unless-stopped
    user: root
    networks:
      - metrics
    volumes:
      - ./loki/loki-config.yml:/etc/loki/loki-config.yml
      - loki-index:/loki-index
      - loki-chunks:/loki-chunks
    command: '-config.file=/etc/loki/loki-config.yml'

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.69.0
    container_name: otel-collector
    networks:
      - metrics
    depends_on:
      - tempo
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector/otel-collector-config.yaml:/etc/otel-collector-config.yaml

  nginx:
    image: nginx:stable
    container_name: nginx
    restart: unless-stopped
    networks:
      - internet
      - metrics
    depends_on:
      - tempo
      - loki
      - prometheus
      - otel-collector
      - grafana
    ports:
      - 3000:3000
      - 4318:4318
      - 3100:3100
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/.htpasswd:/etc/nginx/.htpasswd

  observable-todolist:
    build: ./observable_todolist
    container_name: observable-todolist
    networks:
      - internet
    depends_on:
      - postgres
    ports: 
      - "4001:4000"
    environment:
      - PGUSER=postgres
      - PGPASSWORD=postgres
      - PGDATABASE=observable_todolist
      - PGHOST=postgres
      - PGPORT=5432
      - DATABASE_URL=ecto://postgres:postgres@postgres:5432/observable_todolist
      - SECRET_KEY_BASE=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa

  postgres:
    image: postgres
    container_name: postgres
    networks:
      - internet
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
